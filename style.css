body {
  font-family: Roboto, sans-serif;

}

header {
  background-color: #4584b1;
  height: 4rem;
  color: #fff;
  font-size: 2rem;
  display: flex;
  align-items: center;
}

#logo {
  margin: 40px;
}

nav {
  background-color: #103594; 
  height: 5rem;
  display: flex;
  align-items: center;

  /* Give the nav a background color (#103594) */
  /* Use rem units to give the nav an appropriate height */
  /* Use flexbox to vertially align the nav child elements in the center */
}

nav ul {
  display: flex;
  /* Use flexbox to layout the li elements horizontally */
}

nav ul li {
  color: white;
  list-style: none;
  font-size: 1.25rem;
  margin-right: 1rem;

}

body nav ul li a {
  color: #fff;
  text-decoration: none;
  
  
}

a:hover {
  text-decoration: underline;
}

.where-togo {
  background-color:#040E27 ;
  padding: 1px;
  height: 15rem;

  
}

.where-togo h3 {
  color: #fff;
  font-size: 2rem;
  padding-left: 1rem;
}

.search-form {
  display: flex;
    height: 15rem;

}

.input-field {
  width: 5rem;
  margin: 5rem;

}

input {
  appearance: none;
  width: 10rem;
  height: 3rem;
  padding-left: 4.5rem;
  border-radius: 0.25rem;
  /* Style the form input elements using width, height, padding-left and border-radius */
}

.nice-select {
  /* Select elements are not imput elements! Therefore we've given the <select> element it's own class  */
  /* They are notoriously difficult to style with css */
  /* In this case you can use width, height, font-size, color, border and border-radius */
}

.search-btn {
  /* Buttons are probably the most fun to style! The border-radius and cursor properties can quickly make a button look good */
  /* Style the search button using the following properties: */
  /* 
  - background
  - color
  - font-size
  - height
  - width
  - border
  - border-radius
  - cursor
  */
}

.container {
  /* The destinations are enclosed in an article element that we want to make a grid */
  /* Set the display property to 'grid' and justify the content */
}

.row {
  /* The row of the grid has 3 columns which should be the same width and roughly a third of the available space */
  /* Use the grid-template-columns property to set each column to 30% */
  /* You can experiment with different units for the width values */
  /* Hint: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns */
}

.section-title {
  /* The <div> with class section-title contains an <h3> child which we want to center */
  /* The easiest way to center child elements is to set the display property to 'flex' and justify the content */
}

.single-destination {
  /* Use the margin property to make some space between the destinations */
  /* Set the overflow to 'hidden' */
  /* The overflow CSS shorthand property sets the desired behaviour for an element's overflow 
    â€” i.e. when an element's content is too big to fit. In this case, the image is too big too fit. */
}

img {
  /* Set the max-width property to 100% */
}

/* Let's take the training wheels off. Finish off the page by adding styles to the remaining blocks */

.testimonial-area {
  /* Write your code here */
}

.single-testmonial{
  /* Write your code here */
}

.footer {
  /* Write your code here */
}

.footer-widget p {
  /* Write your code here */
}

.footer-widget a:hover {
   /* Write your code here */
}

.footer-widget ul li {
  /* Write your code here */
}

.footer-widget a {
   /* Write your code here */
}

/* Media Queries */

@media (max-width: 720px) {
    /* Add some responsive code here */
    /* Make the destinations stack on top of each other */
    /* Make the form input stack on top of each other */
}